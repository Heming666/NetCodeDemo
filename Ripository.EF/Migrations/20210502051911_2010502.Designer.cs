// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.EF;

namespace Repository.EF.Migrations
{
    [DbContext(typeof(MySqlDBContext))]
    [Migration("20210502051911_2010502")]
    partial class _2010502
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("utf8", DelegationModes.ApplyToAll)
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Repository.Entity.Models.DepartmentEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeptId");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex(new[] { "ID" }, "Index_ID");

                    b.ToTable("Base_Department");

                    b
                        .HasComment("部门表");
                });

            modelBuilder.Entity("Repository.Entity.Models.UserEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("主键");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasComment("账户");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentEntityID")
                        .HasColumnType("int");

                    b.Property<int?>("DeptInfoID")
                        .HasColumnType("int");

                    b.Property<int?>("Gender")
                        .HasColumnType("int")
                        .HasComment("性别");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasComment("密码");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasComment("手机号");

                    b.Property<string>("Photo")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasComment("照片");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasComment("用户昵称");

                    b.HasKey("ID");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.HasIndex("DepartmentEntityID");

                    b.HasIndex("DeptInfoID");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.HasIndex(new[] { "Account" }, "Index_Account");

                    b.ToTable("Base_UserInfo");

                    b
                        .HasComment("用户信息表");
                });

            modelBuilder.Entity("Repository.Entity.Models.UserEntity", b =>
                {
                    b.HasOne("Repository.Entity.Models.DepartmentEntity", null)
                        .WithMany("Users")
                        .HasForeignKey("DepartmentEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Entity.Models.DepartmentEntity", "DeptInfo")
                        .WithMany()
                        .HasForeignKey("DeptInfoID");

                    b.Navigation("DeptInfo");
                });

            modelBuilder.Entity("Repository.Entity.Models.DepartmentEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
